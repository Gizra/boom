<?php
/**
 * @file
 * Code for the Shoov Repository feature.
 */

/**
 * Performs an HTTP request to GitHub and check for errors.
 *
 * @param string $url
 *   A string containing a fully qualified URI.
 * @param array $options
 *   Options array as passed to drupal_http_request().
 *
 * @return object
 *   The result object.
 *
 * @see drupal_http_request().
 */
function shoov_github_http_request($url, $options) {
  $result = drupal_http_request($url, $options);
  shoov_github_check_response_http_error($url, $result);
  return $result;
}


/**
 * Check if an error was returned by Github, and if so throw an exception.
 *
 * GitHub might return a 200 code, but the data is in fact an error.
 *
 * @param string $url
 *   The URL sent to GitHub
 * @param $result
 *   The result object from the drupal_http_request() call.
 *
 * @throws \RestfulServerConfigurationException
 */
function shoov_github_check_response_http_error($url, $result) {
  if (intval($result->code) !== 200 || strpos($result->data, 'error=') === 0) {

    $params = array(
      '@url' => $url,
      '@code' => $result->code,
      '@error' => $result->data,
    );

    throw new \RestfulServerConfigurationException(format_string('Calling @url resulted with a @code HTTP code, with the following error message: @error', $params));
  }
}

/**
 * Get the valid result from the response of the HTTP request.
 *
 * Result format is for example:
 * 'access_token=someTokenValue&scope=&token_type=bearer';
 *
 * @param $result
 *   The result object from the drupal_http_request() call.
 *
 * @return string
 *   The result.
 */
function shoov_github_get_data_from_http_result($result) {
  $return = $result->data;

  $return = explode('&', $result->data);
  $return = explode('=', $return[0]);
  return $return[1];
}
