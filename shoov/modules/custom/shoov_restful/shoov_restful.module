<?php
/**
 * @file
 * Code for the RESTful integration.
 */

if (!drupal_is_cli()) {
  header('Access-Control-Allow-Origin: *');
  header('Access-Control-Allow-Credentials: true');
  header('Access-Control-Allow-Headers: Authorization, access-token');
}

/**
 * Implements hook_menu().
 */
function shoov_restful_menu() {
  $items['auth/github'] = array(
    'title' => 'Github auth',
    'page callback' => 'shoov_restful_auth_github',
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Authenticate an existing user or create a new one.
 */
function shoov_restful_auth_github() {
  $request = array(
    'method' => 'POST',
    'data' => http_build_query(array(
      'client_id' => variable_get('shoov_github_client_id'),
      'client_secret' => variable_get('shoov_github_client_secret'),
      'code' => $_GET['code'],
    )),
  );

  $result = drupal_http_request('https://github.com/login/oauth/access_token', $request);
  watchdog('github', var_export($result, true));

  // Determine if the user exists.

  // User is blocked.



  // Let RESTful deal with the answer.
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function shoov_restful_ctools_plugin_directory($module, $plugin) {
  if ($module == 'restful') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_restful_file_download_access().
 *
 * Get the user account from the RESTful authentication.
 */
function shoov_restful_file_download_access($file_item, $entity_type, $entity) {
  $auth_plugins = array_keys(restful_get_authentication_plugins());

  $auth_manager = new RestfulAuthenticationManager();

  // Register all authentication plugins.
  foreach ($auth_plugins as $auth_plugin_name) {
    $auth_handler = restful_get_authentication_handler($auth_plugin_name);
    $auth_manager->addAuthenticationProvider($auth_handler);
    $auth_manager->setIsOptional(TRUE);
  }

  $request = restful_parse_request();
  $auth_manager->getAccount($request);
}